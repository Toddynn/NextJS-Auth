'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var path = require('path');
var swaggerJsdoc = _interopDefault(require('swagger-jsdoc'));

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var defaultOptions = {
  apiFolder: 'pages/api',
  definition: {
    openapi: '3.0.0',
    info: {
      title: 'Demo Api',
      version: '1.0'
    }
  }
};
/**
 * Create swagger JSON
 * @param options.openApiVersion Open API version {3.0.0}
 * @param options.apiFolder NextJS API folder {pages/api}
 * @param options.title Title
 * @param options.version Version
 * @returns Swagger JSON Spec
 */

function createSwaggerSpec(_temp) {
  var _ref = _temp === void 0 ? defaultOptions : _temp,
      _ref$apiFolder = _ref.apiFolder,
      apiFolder = _ref$apiFolder === void 0 ? 'pages/api' : _ref$apiFolder,
      swaggerOptions = _objectWithoutPropertiesLoose(_ref, ["apiFolder"]);

  var apiDirectory = path.join(process.cwd(), apiFolder);
  var buildApiDirectory = path.join(process.cwd(), '.next/server', apiFolder);

  var options = _extends({}, swaggerOptions, {
    apis: [apiDirectory + "/**/*.js", apiDirectory + "/**/*.ts", apiDirectory + "/**/*.tsx", buildApiDirectory + "/**/*.js"]
  });

  return swaggerJsdoc(options);
}
/**
 * withSwagger middleware
 * @param options.openApiVersion Open API version {3.0.0}
 * @param options.apiFolder NextJS API folder {pages/api}
 * @param options.title Title
 * @param options.version Version
 * @returns
 */

function withSwagger(_temp2) {
  var _ref2 = _temp2 === void 0 ? defaultOptions : _temp2,
      _ref2$apiFolder = _ref2.apiFolder,
      apiFolder = _ref2$apiFolder === void 0 ? 'pages/api' : _ref2$apiFolder,
      swaggerOptions = _objectWithoutPropertiesLoose(_ref2, ["apiFolder"]);

  return function () {
    return function (_req, res) {
      try {
        var swaggerSpec = createSwaggerSpec(_extends({
          apiFolder: apiFolder
        }, swaggerOptions));
        res.status(200).send(swaggerSpec);
      } catch (error) {
        res.status(400).send(error);
      }
    };
  };
}

exports.createSwaggerSpec = createSwaggerSpec;
exports.withSwagger = withSwagger;
//# sourceMappingURL=next-swagger-doc.cjs.development.js.map
